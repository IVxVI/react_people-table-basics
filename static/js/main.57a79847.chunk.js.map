{"version":3,"sources":["components/Nav/Nav.tsx","components/PersonLink/PersonLink.tsx","components/People/PeopleTable.tsx","components/Loader/Loader.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/PageNotFound.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["Nav","className","role","to","isActive","classNames","PersonLink","person","sex","slug","name","PeopleTable","people","selectedSlug","map","born","died","fatherName","motherName","isMother","find","isFather","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","fetchPeople","useCallback","peopleFromServer","useEffect","useParams","length","PageNotFound","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.57a79847.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={\n              ({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })\n            }\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={\n              ({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })\n            }\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { sex, slug, name } = person;\n\n  return (\n    <Link\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped\n          is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(({\n          name, sex, born, died, fatherName,\n          motherName, slug,\n        }: Person) => {\n          const isMother = people.find(person => person.name === motherName);\n          const isFather = people.find(person => person.name === fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames(\n                { 'has-background-warning': slug === selectedSlug },\n              )}\n            >\n              <td>\n                <Link\n                  to={`/people/${slug}`}\n                  className={classNames(\n                    { 'has-text-danger': sex === 'f' },\n                  )}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                { isMother ? (\n                  <PersonLink person={isMother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                { isFather ? (\n                  <PersonLink person={isFather} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../People/PeopleTable';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchPeople = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, [fetchPeople]);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {hasError && (\n                  <p\n                    data-cy=\"peopleLoadingError\"\n                    className=\"has-text-danger\"\n                  >\n                    Unable to load people from server\n                  </p>\n                )}\n\n                {people.length === 0\n                  ? (\n                    <p data-cy=\"noPeopleMessage\">\n                      No people loaded from server\n                    </p>\n                  ) : ''}\n\n                <PeopleTable people={people} selectedSlug={slug} />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav/Nav';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { HomePage } from './components/HomePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <main className=\"section\">\n        <div className=\"container\">\n          <Nav />\n\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}